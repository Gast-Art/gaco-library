import{j as e}from"./jsx-runtime-CLpGMVip.js";import{r as S}from"./index-CR__hKHy.js";import{S as g}from"./react-select.esm-3cBvhBqn.js";import{d as y,n as O}from"./styled-components.browser.esm-DnH8uv-2.js";import{S as f,C as x,L as h,E as j,c as w,a as q}from"./styles-B0UMicg-.js";import{C as T}from"./circle-alert-C-cAHhHG.js";const M=y(g)`
  ${f}
`,b=t=>e.jsx(w.DropdownIndicator,{...t,children:t.error?e.jsx(T,{}):e.jsx(q,{})}),C=({id:t,className:a,options:l,value:r,error:s,onChange:c,label:o,menuPortalTarget:p=document.body})=>{const[d,i]=S.useState(!1),m=O();return e.jsxs("div",{className:a,children:[e.jsxs(x,{$error:!!s,children:[e.jsx(M,{id:t,options:l,menuPortalTarget:p,value:r,onChange:(n,u)=>c(n,u),placeholder:" ",classNamePrefix:"react-select",styles:{menuPortal:n=>({...n,pointerEvents:"auto",zIndex:m.zIndices.dropdownMenu})},onFocus:()=>i(!0),onBlur:()=>i(!1),components:{DropdownIndicator:n=>e.jsx(b,{...n,error:s})}}),o&&e.jsx(h,{$active:!!(r!=null&&r.value.length)||d,children:o})]}),s&&e.jsx(j,{id:`${t}-error`,children:s})]})};C.__docgenInfo={description:"",methods:[],displayName:"Select",props:{id:{required:!0,tsType:{name:"string"},description:""},className:{required:!1,tsType:{name:"string"},description:""},options:{required:!0,tsType:{name:"OptionsOrGroups",elements:[{name:"SelectOption"},{name:"signature",type:"object",raw:"{ label: string; options: SelectOption[] }",signature:{properties:[{key:"label",value:{name:"string",required:!0}},{key:"options",value:{name:"Array",elements:[{name:"SelectOption"}],raw:"SelectOption[]",required:!0}}]}}],raw:"OptionsOrGroups<SelectOption, { label: string; options: SelectOption[] }>"},description:""},menuPortalTarget:{required:!1,tsType:{name:"HTMLElement"},description:"",defaultValue:{value:"document.body",computed:!0}},value:{required:!1,tsType:{name:"SingleValue",elements:[{name:"SelectOption"}],raw:"SingleValue<SelectOption>"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(selected: SingleValue<SelectOption>, actionMeta: ActionMeta<SelectOption>) => void",signature:{arguments:[{type:{name:"SingleValue",elements:[{name:"SelectOption"}],raw:"SingleValue<SelectOption>"},name:"selected"},{type:{name:"ActionMeta",elements:[{name:"SelectOption"}],raw:"ActionMeta<SelectOption>"},name:"actionMeta"}],return:{name:"void"}}},description:""},label:{required:!1,tsType:{name:"string"},description:""},error:{required:!1,tsType:{name:"string"},description:""}}};export{C as S};
