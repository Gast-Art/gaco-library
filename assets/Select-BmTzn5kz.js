import{j as t}from"./jsx-runtime-DPtPVAOg.js";import{r as c}from"./index-CR__hKHy.js";import{S as O}from"./react-select.esm-15k8t0GS.js";import{d as T,n as w}from"./styled-components.browser.esm-DnH8uv-2.js";import{S as M,C as x,L as q,E as h,c as j,a as D,b as L}from"./styles-Dt-cqZD9.js";const b=T(O)`
  ${M}
`,I=n=>t.jsx(j.DropdownIndicator,{...n,children:n.error?t.jsx(D,{}):t.jsx(L,{})}),p=c.forwardRef(({id:n,className:m,options:d,value:r,error:s,onChange:u,onBlur:a,onFocus:i,label:o,menuPortalTarget:g=document.body,noOptionsMessage:S},y)=>{const[v,l]=c.useState(!1),f=w();return t.jsxs("div",{className:m,ref:y,children:[t.jsxs(x,{$error:!!s,children:[t.jsx(b,{id:n,options:d,menuPortalTarget:g,value:r,onChange:(e,E)=>u(e,E),placeholder:" ",classNamePrefix:"react-select",noOptionsMessage:S,styles:{menuPortal:e=>({...e,pointerEvents:"auto",zIndex:f.zIndices.dropdownMenu})},onFocus:e=>{l(!0),i==null||i(e)},onBlur:e=>{l(!1),a==null||a(e)},components:{DropdownIndicator:e=>t.jsx(I,{...e,error:s})}}),o&&t.jsx(q,{$active:!!(r!=null&&r.value.length)||v,children:o})]}),s&&t.jsx(h,{id:`${n}-error`,children:s})]})});p.displayName="Select";p.__docgenInfo={description:"",methods:[],displayName:"Select",props:{id:{required:!0,tsType:{name:"string"},description:""},className:{required:!1,tsType:{name:"string"},description:""},options:{required:!0,tsType:{name:"OptionsOrGroups",elements:[{name:"SelectOption"},{name:"signature",type:"object",raw:"{ label: string; options: SelectOption[] }",signature:{properties:[{key:"label",value:{name:"string",required:!0}},{key:"options",value:{name:"Array",elements:[{name:"SelectOption"}],raw:"SelectOption[]",required:!0}}]}}],raw:"OptionsOrGroups<SelectOption, { label: string; options: SelectOption[] }>"},description:""},menuPortalTarget:{required:!1,tsType:{name:"HTMLElement"},description:"",defaultValue:{value:"document.body",computed:!0}},value:{required:!1,tsType:{name:"SingleValue",elements:[{name:"SelectOption"}],raw:"SingleValue<SelectOption>"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(selected: SingleValue<SelectOption>, actionMeta: ActionMeta<SelectOption>) => void",signature:{arguments:[{type:{name:"SingleValue",elements:[{name:"SelectOption"}],raw:"SingleValue<SelectOption>"},name:"selected"},{type:{name:"ActionMeta",elements:[{name:"SelectOption"}],raw:"ActionMeta<SelectOption>"},name:"actionMeta"}],return:{name:"void"}}},description:""},onBlur:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: FocusEvent<HTMLDivElement>) => void",signature:{arguments:[{type:{name:"FocusEvent",elements:[{name:"HTMLDivElement"}],raw:"FocusEvent<HTMLDivElement>"},name:"event"}],return:{name:"void"}}},description:""},onFocus:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: FocusEvent<HTMLDivElement>) => void",signature:{arguments:[{type:{name:"FocusEvent",elements:[{name:"HTMLDivElement"}],raw:"FocusEvent<HTMLDivElement>"},name:"event"}],return:{name:"void"}}},description:""},label:{required:!1,tsType:{name:"string"},description:""},error:{required:!1,tsType:{name:"string"},description:""},noOptionsMessage:{required:!1,tsType:{name:"signature",type:"function",raw:"() => string",signature:{arguments:[],return:{name:"string"}}},description:""}}};export{p as S};
